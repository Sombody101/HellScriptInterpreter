//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from f:/HellScriptLanguage/BashHellScript/BashHellScript/ANTLR/HellScript/HellScriptLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class HellScriptLexer : HellScriptLexerBase {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		RuntimeVersion=1, ImportScript=2, ImportLibrary=3, HashBangLine=4, MultiLineComment=5, 
		SingleLineComment=6, OpenBracket=7, CloseBracket=8, OpenParen=9, CloseParen=10, 
		OpenBrace=11, TemplateCloseBrace=12, CloseBrace=13, SemiColon=14, Comma=15, 
		Assign=16, QuestionMark=17, Colon=18, Dot=19, PlusPlus=20, MinusMinus=21, 
		Plus=22, Minus=23, BitNot=24, Not=25, Multiply=26, Divide=27, Modulus=28, 
		Power=29, NullCoalesce=30, Hashtag=31, RightShiftArithmetic=32, LeftShiftArithmetic=33, 
		LessThan=34, MoreThan=35, LessThanEquals=36, GreaterThanEquals=37, Equals_=38, 
		NotEquals=39, IdentityEquals=40, IdentityNotEquals=41, BitAnd=42, BitXOr=43, 
		BitOr=44, And=45, Or=46, MultiplyAssign=47, DivideAssign=48, ModulusAssign=49, 
		PlusAssign=50, MinusAssign=51, LeftShiftArithmeticAssign=52, RightShiftArithmeticAssign=53, 
		BitAndAssign=54, BitXorAssign=55, BitOrAssign=56, PowerAssign=57, NullishCoalescingAssign=58, 
		Arrow=59, NullLiteral=60, BooleanLiteral=61, DecimalLiteral=62, HexIntegerLiteral=63, 
		OctalIntegerLiteral=64, OctalIntegerLiteral2=65, BinaryIntegerLiteral=66, 
		BigHexIntegerLiteral=67, BigOctalIntegerLiteral=68, BigBinaryIntegerLiteral=69, 
		BigDecimalIntegerLiteral=70, Break=71, Do=72, Typeof=73, Case=74, Else=75, 
		New=76, Var=77, Catch=78, Finally=79, Return=80, Void=81, Continue=82, 
		For=83, Switch=84, While=85, Function_=86, This=87, With=88, Default=89, 
		If=90, Throw=91, Delete=92, In=93, Try=94, As=95, Class=96, Get=97, Set=98, 
		Enum=99, Extends=100, Const=101, Params=102, Private=103, Public=104, 
		Interface=105, Protected=106, Static=107, Identifier=108, StringLiteral=109, 
		BackTick=110, WhiteSpaces=111, LineTerminator=112, UnexpectedCharacter=113, 
		TemplateStringStartExpression=114, TemplateStringAtom=115;
	public const int
		ERROR=2;
	public const int
		TEMPLATE=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "TEMPLATE"
	};

	public static readonly string[] ruleNames = {
		"RuntimeVersion", "ImportScript", "ImportLibrary", "HashBangLine", "MultiLineComment", 
		"SingleLineComment", "OpenBracket", "CloseBracket", "OpenParen", "CloseParen", 
		"OpenBrace", "TemplateCloseBrace", "CloseBrace", "SemiColon", "Comma", 
		"Assign", "QuestionMark", "Colon", "Dot", "PlusPlus", "MinusMinus", "Plus", 
		"Minus", "BitNot", "Not", "Multiply", "Divide", "Modulus", "Power", "NullCoalesce", 
		"Hashtag", "RightShiftArithmetic", "LeftShiftArithmetic", "LessThan", 
		"MoreThan", "LessThanEquals", "GreaterThanEquals", "Equals_", "NotEquals", 
		"IdentityEquals", "IdentityNotEquals", "BitAnd", "BitXOr", "BitOr", "And", 
		"Or", "MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign", 
		"MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
		"BitAndAssign", "BitXorAssign", "BitOrAssign", "PowerAssign", "NullishCoalescingAssign", 
		"Arrow", "NullLiteral", "BooleanLiteral", "DecimalLiteral", "HexIntegerLiteral", 
		"OctalIntegerLiteral", "OctalIntegerLiteral2", "BinaryIntegerLiteral", 
		"BigHexIntegerLiteral", "BigOctalIntegerLiteral", "BigBinaryIntegerLiteral", 
		"BigDecimalIntegerLiteral", "Break", "Do", "Typeof", "Case", "Else", "New", 
		"Var", "Catch", "Finally", "Return", "Void", "Continue", "For", "Switch", 
		"While", "Function_", "This", "With", "Default", "If", "Throw", "Delete", 
		"In", "Try", "As", "Class", "Get", "Set", "Enum", "Extends", "Const", 
		"Params", "Private", "Public", "Interface", "Protected", "Static", "Identifier", 
		"StringLiteral", "BackTick", "WhiteSpaces", "LineTerminator", "UnexpectedCharacter", 
		"BackTickInside", "TemplateStringStartExpression", "TemplateStringAtom", 
		"DoubleStringCharacter", "SingleStringCharacter", "EscapeSequence", "CharacterEscapeSequence", 
		"HexEscapeSequence", "UnicodeEscapeSequence", "ExtendedUnicodeEscapeSequence", 
		"SingleEscapeCharacter", "NonEscapeCharacter", "EscapeCharacter", "LineContinuation", 
		"HexDigit", "DecimalIntegerLiteral", "ExponentPart", "IdentifierPart", 
		"IdentifierStart"
	};


	public HellScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public HellScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'#version'", "'#import'", "'#use'", null, null, null, "'['", "']'", 
		"'('", "')'", "'{'", null, "'}'", "';'", "','", "'='", "'?'", "':'", "'.'", 
		"'++'", "'--'", "'+'", "'-'", "'~'", "'!'", "'*'", "'/'", "'%'", "'**'", 
		"'??'", "'#'", "'>>'", "'<<'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", 
		"':=='", "':!='", "'&'", "'^'", "'|'", null, null, "'*='", "'/='", "'%='", 
		"'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", "'**='", "'??='", 
		"'->'", "'null'", null, null, null, null, null, null, null, null, null, 
		null, "'break'", "'do'", "'typeof'", "'case'", "'else'", "'new'", "'var'", 
		"'catch'", "'finally'", "'return'", "'void'", "'continue'", "'for'", "'switch'", 
		"'while'", "'function'", "'this'", "'with'", "'default'", "'if'", "'throw'", 
		"'delete'", "'in'", "'try'", "'as'", "'class'", "'get'", "'set'", "'enum'", 
		null, "'const'", "'params'", "'private'", "'public'", "'interface'", "'protected'", 
		"'static'", null, null, null, null, null, null, "'${'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "RuntimeVersion", "ImportScript", "ImportLibrary", "HashBangLine", 
		"MultiLineComment", "SingleLineComment", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "OpenBrace", "TemplateCloseBrace", "CloseBrace", 
		"SemiColon", "Comma", "Assign", "QuestionMark", "Colon", "Dot", "PlusPlus", 
		"MinusMinus", "Plus", "Minus", "BitNot", "Not", "Multiply", "Divide", 
		"Modulus", "Power", "NullCoalesce", "Hashtag", "RightShiftArithmetic", 
		"LeftShiftArithmetic", "LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals", 
		"Equals_", "NotEquals", "IdentityEquals", "IdentityNotEquals", "BitAnd", 
		"BitXOr", "BitOr", "And", "Or", "MultiplyAssign", "DivideAssign", "ModulusAssign", 
		"PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
		"BitAndAssign", "BitXorAssign", "BitOrAssign", "PowerAssign", "NullishCoalescingAssign", 
		"Arrow", "NullLiteral", "BooleanLiteral", "DecimalLiteral", "HexIntegerLiteral", 
		"OctalIntegerLiteral", "OctalIntegerLiteral2", "BinaryIntegerLiteral", 
		"BigHexIntegerLiteral", "BigOctalIntegerLiteral", "BigBinaryIntegerLiteral", 
		"BigDecimalIntegerLiteral", "Break", "Do", "Typeof", "Case", "Else", "New", 
		"Var", "Catch", "Finally", "Return", "Void", "Continue", "For", "Switch", 
		"While", "Function_", "This", "With", "Default", "If", "Throw", "Delete", 
		"In", "Try", "As", "Class", "Get", "Set", "Enum", "Extends", "Const", 
		"Params", "Private", "Public", "Interface", "Protected", "Static", "Identifier", 
		"StringLiteral", "BackTick", "WhiteSpaces", "LineTerminator", "UnexpectedCharacter", 
		"TemplateStringStartExpression", "TemplateStringAtom"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HellScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static HellScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 10 : OpenBrace_action(_localctx, actionIndex); break;
		case 12 : CloseBrace_action(_localctx, actionIndex); break;
		case 108 : StringLiteral_action(_localctx, actionIndex); break;
		case 109 : BackTick_action(_localctx, actionIndex); break;
		case 113 : BackTickInside_action(_localctx, actionIndex); break;
		}
	}
	private void OpenBrace_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: this.ProcessOpenBrace(); break;
		}
	}
	private void CloseBrace_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: this.ProcessCloseBrace(); break;
		}
	}
	private void StringLiteral_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: this.ProcessStringLiteral(); break;
		}
	}
	private void BackTick_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: this.IncreaseTemplateDepth(); break;
		}
	}
	private void BackTickInside_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4: this.DecreaseTemplateDepth(); break;
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 3 : return HashBangLine_sempred(_localctx, predIndex);
		case 11 : return TemplateCloseBrace_sempred(_localctx, predIndex);
		case 63 : return OctalIntegerLiteral_sempred(_localctx, predIndex);
		case 102 : return Private_sempred(_localctx, predIndex);
		case 103 : return Public_sempred(_localctx, predIndex);
		case 104 : return Interface_sempred(_localctx, predIndex);
		case 105 : return Protected_sempred(_localctx, predIndex);
		case 106 : return Static_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool HashBangLine_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return  this.IsStartOfFile() ;
		}
		return true;
	}
	private bool TemplateCloseBrace_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return this.IsInTemplateString();
		}
		return true;
	}
	private bool OctalIntegerLiteral_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2: return !this.IsStrictMode();
		}
		return true;
	}
	private bool Private_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 3: return this.IsStrictMode();
		}
		return true;
	}
	private bool Public_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 4: return this.IsStrictMode();
		}
		return true;
	}
	private bool Interface_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 5: return this.IsStrictMode();
		}
		return true;
	}
	private bool Protected_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 6: return this.IsStrictMode();
		}
		return true;
	}
	private bool Static_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 7: return this.IsStrictMode();
		}
		return true;
	}

	private static int[] _serializedATN = {
		4,0,115,973,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
		2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,
		2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,
		2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
		2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
		2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,
		2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,
		2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,
		2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,
		2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,
		2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,
		2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,
		104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,
		2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,
		2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,
		2,122,7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,
		2,128,7,128,2,129,7,129,2,130,7,130,2,131,7,131,1,0,1,0,1,0,1,0,1,0,1,
		0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,
		1,3,1,3,1,3,1,3,5,3,294,8,3,10,3,12,3,297,9,3,1,4,1,4,1,4,1,4,5,4,303,
		8,4,10,4,12,4,306,9,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,5,5,317,8,5,
		10,5,12,5,320,9,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,
		10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,
		15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,
		21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,
		28,1,28,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,
		33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,
		38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,
		43,1,44,1,44,1,44,1,44,1,44,3,44,424,8,44,1,45,1,45,1,45,1,45,3,45,430,
		8,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,50,
		1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,54,
		1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,
		1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
		1,60,1,60,3,60,489,8,60,1,61,1,61,1,61,1,61,5,61,495,8,61,10,61,12,61,
		498,9,61,1,61,3,61,501,8,61,1,61,1,61,1,61,5,61,506,8,61,10,61,12,61,509,
		9,61,1,61,3,61,512,8,61,1,61,1,61,3,61,516,8,61,3,61,518,8,61,1,62,1,62,
		1,62,1,62,5,62,524,8,62,10,62,12,62,527,9,62,1,63,1,63,4,63,531,8,63,11,
		63,12,63,532,1,63,1,63,1,64,1,64,1,64,1,64,5,64,541,8,64,10,64,12,64,544,
		9,64,1,65,1,65,1,65,1,65,5,65,550,8,65,10,65,12,65,553,9,65,1,66,1,66,
		1,66,1,66,5,66,559,8,66,10,66,12,66,562,9,66,1,66,1,66,1,67,1,67,1,67,
		1,67,5,67,570,8,67,10,67,12,67,573,9,67,1,67,1,67,1,68,1,68,1,68,1,68,
		5,68,581,8,68,10,68,12,68,584,9,68,1,68,1,68,1,69,1,69,1,69,1,70,1,70,
		1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,
		1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,
		1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,
		1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,80,1,80,1,80,
		1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,
		1,82,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,84,
		1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,86,
		1,87,1,87,1,87,1,87,1,87,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,89,
		1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,91,
		1,91,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,95,1,95,1,95,
		1,95,1,95,1,95,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,98,1,98,1,98,
		1,98,1,98,1,99,1,99,1,100,1,100,1,100,1,100,1,100,1,100,1,101,1,101,1,
		101,1,101,1,101,1,101,1,101,1,102,1,102,1,102,1,102,1,102,1,102,1,102,
		1,102,1,102,1,102,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,
		1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,
		1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,
		1,106,1,106,1,106,1,106,1,106,1,106,1,106,1,106,1,106,1,107,1,107,5,107,
		818,8,107,10,107,12,107,821,9,107,1,108,1,108,5,108,825,8,108,10,108,12,
		108,828,9,108,1,108,1,108,1,108,5,108,833,8,108,10,108,12,108,836,9,108,
		1,108,3,108,839,8,108,1,108,1,108,1,109,1,109,1,109,1,109,1,109,1,110,
		4,110,849,8,110,11,110,12,110,850,1,110,1,110,1,111,1,111,1,111,1,111,
		1,112,1,112,1,112,1,112,1,113,1,113,1,113,1,113,1,113,1,113,1,114,1,114,
		1,114,1,114,1,114,1,115,1,115,1,116,1,116,1,116,1,116,3,116,880,8,116,
		1,117,1,117,1,117,1,117,3,117,886,8,117,1,118,1,118,1,118,1,118,1,118,
		3,118,893,8,118,1,119,1,119,3,119,897,8,119,1,120,1,120,1,120,1,120,1,
		121,1,121,1,121,1,121,1,121,1,121,1,121,1,121,1,121,1,121,4,121,913,8,
		121,11,121,12,121,914,1,121,1,121,3,121,919,8,121,1,122,1,122,1,122,4,
		122,924,8,122,11,122,12,122,925,1,122,1,122,1,123,1,123,1,124,1,124,1,
		125,1,125,3,125,936,8,125,1,126,1,126,4,126,940,8,126,11,126,12,126,941,
		1,127,1,127,1,128,1,128,1,128,5,128,949,8,128,10,128,12,128,952,9,128,
		3,128,954,8,128,1,129,1,129,3,129,958,8,129,1,129,4,129,961,8,129,11,129,
		12,129,962,1,130,1,130,3,130,967,8,130,1,131,1,131,1,131,3,131,972,8,131,
		1,304,0,132,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,
		26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,
		50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,70,35,72,36,
		74,37,76,38,78,39,80,40,82,41,84,42,86,43,88,44,90,45,92,46,94,47,96,48,
		98,49,100,50,102,51,104,52,106,53,108,54,110,55,112,56,114,57,116,58,118,
		59,120,60,122,61,124,62,126,63,128,64,130,65,132,66,134,67,136,68,138,
		69,140,70,142,71,144,72,146,73,148,74,150,75,152,76,154,77,156,78,158,
		79,160,80,162,81,164,82,166,83,168,84,170,85,172,86,174,87,176,88,178,
		89,180,90,182,91,184,92,186,93,188,94,190,95,192,96,194,97,196,98,198,
		99,200,100,202,101,204,102,206,103,208,104,210,105,212,106,214,107,216,
		108,218,109,220,110,222,111,224,112,226,113,228,0,230,114,232,115,234,
		0,236,0,238,0,240,0,242,0,244,0,246,0,248,0,250,0,252,0,254,0,256,0,258,
		0,260,0,262,0,264,0,2,0,1,24,3,0,10,10,13,13,8232,8233,1,0,48,57,2,0,48,
		57,95,95,2,0,88,88,120,120,3,0,48,57,65,70,97,102,1,0,48,55,2,0,79,79,
		111,111,2,0,48,55,95,95,2,0,66,66,98,98,1,0,48,49,2,0,48,49,95,95,4,0,
		9,9,11,12,32,32,160,160,1,0,96,96,4,0,10,10,13,13,34,34,92,92,4,0,10,10,
		13,13,39,39,92,92,9,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,
		116,116,118,118,12,0,10,10,13,13,34,34,39,39,48,57,92,92,98,98,102,102,
		110,110,114,114,116,118,120,120,3,0,48,57,117,117,120,120,4,0,48,57,65,
		70,95,95,97,102,1,0,49,57,2,0,69,69,101,101,2,0,43,43,45,45,408,0,48,57,
		95,95,768,879,1155,1159,1425,1469,1471,1471,1473,1474,1476,1477,1479,1479,
		1552,1562,1611,1641,1648,1648,1750,1756,1759,1764,1767,1768,1770,1773,
		1776,1785,1809,1809,1840,1866,1958,1968,1984,1993,2027,2035,2045,2045,
		2070,2073,2075,2083,2085,2087,2089,2093,2137,2139,2200,2207,2250,2273,
		2275,2306,2362,2362,2364,2364,2369,2376,2381,2381,2385,2391,2402,2403,
		2406,2415,2433,2433,2492,2492,2497,2500,2509,2509,2530,2531,2534,2543,
		2558,2558,2561,2562,2620,2620,2625,2626,2631,2632,2635,2637,2641,2641,
		2662,2673,2677,2677,2689,2690,2748,2748,2753,2757,2759,2760,2765,2765,
		2786,2787,2790,2799,2810,2815,2817,2817,2876,2876,2879,2879,2881,2884,
		2893,2893,2901,2902,2914,2915,2918,2927,2946,2946,3008,3008,3021,3021,
		3046,3055,3072,3072,3076,3076,3132,3132,3134,3136,3142,3144,3146,3149,
		3157,3158,3170,3171,3174,3183,3201,3201,3260,3260,3263,3263,3270,3270,
		3276,3277,3298,3299,3302,3311,3328,3329,3387,3388,3393,3396,3405,3405,
		3426,3427,3430,3439,3457,3457,3530,3530,3538,3540,3542,3542,3558,3567,
		3633,3633,3636,3642,3655,3662,3664,3673,3761,3761,3764,3772,3784,3790,
		3792,3801,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3953,3966,
		3968,3972,3974,3975,3981,3991,3993,4028,4038,4038,4141,4144,4146,4151,
		4153,4154,4157,4158,4160,4169,4184,4185,4190,4192,4209,4212,4226,4226,
		4229,4230,4237,4237,4240,4249,4253,4253,4957,4959,5906,5908,5938,5939,
		5970,5971,6002,6003,6068,6069,6071,6077,6086,6086,6089,6099,6109,6109,
		6112,6121,6155,6157,6159,6169,6277,6278,6313,6313,6432,6434,6439,6440,
		6450,6450,6457,6459,6470,6479,6608,6617,6679,6680,6683,6683,6742,6742,
		6744,6750,6752,6752,6754,6754,6757,6764,6771,6780,6783,6793,6800,6809,
		6832,6845,6847,6862,6912,6915,6964,6964,6966,6970,6972,6972,6978,6978,
		6992,7001,7019,7027,7040,7041,7074,7077,7080,7081,7083,7085,7088,7097,
		7142,7142,7144,7145,7149,7149,7151,7153,7212,7219,7222,7223,7232,7241,
		7248,7257,7376,7378,7380,7392,7394,7400,7405,7405,7412,7412,7416,7417,
		7616,7679,8204,8205,8255,8256,8276,8276,8400,8412,8417,8417,8421,8432,
		11503,11505,11647,11647,11744,11775,12330,12333,12441,12442,42528,42537,
		42607,42607,42612,42621,42654,42655,42736,42737,43010,43010,43014,43014,
		43019,43019,43045,43046,43052,43052,43204,43205,43216,43225,43232,43249,
		43263,43273,43302,43309,43335,43345,43392,43394,43443,43443,43446,43449,
		43452,43453,43472,43481,43493,43493,43504,43513,43561,43566,43569,43570,
		43573,43574,43587,43587,43596,43596,43600,43609,43644,43644,43696,43696,
		43698,43700,43703,43704,43710,43711,43713,43713,43756,43757,43766,43766,
		44005,44005,44008,44008,44013,44013,44016,44025,64286,64286,65024,65039,
		65056,65071,65075,65076,65101,65103,65296,65305,65343,65343,66045,66045,
		66272,66272,66422,66426,66720,66729,68097,68099,68101,68102,68108,68111,
		68152,68154,68159,68159,68325,68326,68900,68903,68912,68921,69291,69292,
		69373,69375,69446,69456,69506,69509,69633,69633,69688,69702,69734,69744,
		69747,69748,69759,69761,69811,69814,69817,69818,69826,69826,69872,69881,
		69888,69890,69927,69931,69933,69940,69942,69951,70003,70003,70016,70017,
		70070,70078,70089,70092,70095,70105,70191,70193,70196,70196,70198,70199,
		70206,70206,70209,70209,70367,70367,70371,70378,70384,70393,70400,70401,
		70459,70460,70464,70464,70502,70508,70512,70516,70712,70719,70722,70724,
		70726,70726,70736,70745,70750,70750,70835,70840,70842,70842,70847,70848,
		70850,70851,70864,70873,71090,71093,71100,71101,71103,71104,71132,71133,
		71219,71226,71229,71229,71231,71232,71248,71257,71339,71339,71341,71341,
		71344,71349,71351,71351,71360,71369,71453,71455,71458,71461,71463,71467,
		71472,71481,71727,71735,71737,71738,71904,71913,71995,71996,71998,71998,
		72003,72003,72016,72025,72148,72151,72154,72155,72160,72160,72193,72202,
		72243,72248,72251,72254,72263,72263,72273,72278,72281,72283,72330,72342,
		72344,72345,72752,72758,72760,72765,72767,72767,72784,72793,72850,72871,
		72874,72880,72882,72883,72885,72886,73009,73014,73018,73018,73020,73021,
		73023,73029,73031,73031,73040,73049,73104,73105,73109,73109,73111,73111,
		73120,73129,73459,73460,73472,73473,73526,73530,73536,73536,73538,73538,
		73552,73561,78912,78912,78919,78933,92768,92777,92864,92873,92912,92916,
		92976,92982,93008,93017,94031,94031,94095,94098,94180,94180,113821,113822,
		118528,118573,118576,118598,119143,119145,119163,119170,119173,119179,
		119210,119213,119362,119364,120782,120831,121344,121398,121403,121452,
		121461,121461,121476,121476,121499,121503,121505,121519,122880,122886,
		122888,122904,122907,122913,122915,122916,122918,122922,123023,123023,
		123184,123190,123200,123209,123566,123566,123628,123641,124140,124153,
		125136,125142,125252,125258,125264,125273,130032,130041,917760,917999,
		661,0,36,36,65,90,95,95,97,122,170,170,181,181,186,186,192,214,216,246,
		248,705,710,721,736,740,748,748,750,750,880,884,886,887,890,893,895,895,
		902,902,904,906,908,908,910,929,931,1013,1015,1153,1162,1327,1329,1366,
		1369,1369,1376,1416,1488,1514,1519,1522,1568,1610,1646,1647,1649,1747,
		1749,1749,1765,1766,1774,1775,1786,1788,1791,1791,1808,1808,1810,1839,
		1869,1957,1969,1969,1994,2026,2036,2037,2042,2042,2048,2069,2074,2074,
		2084,2084,2088,2088,2112,2136,2144,2154,2160,2183,2185,2190,2208,2249,
		2308,2361,2365,2365,2384,2384,2392,2401,2417,2432,2437,2444,2447,2448,
		2451,2472,2474,2480,2482,2482,2486,2489,2493,2493,2510,2510,2524,2525,
		2527,2529,2544,2545,2556,2556,2565,2570,2575,2576,2579,2600,2602,2608,
		2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2701,
		2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,
		2784,2785,2809,2809,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,
		2869,2873,2877,2877,2908,2909,2911,2913,2929,2929,2947,2947,2949,2954,
		2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,
		2990,3001,3024,3024,3077,3084,3086,3088,3090,3112,3114,3129,3133,3133,
		3160,3162,3165,3165,3168,3169,3200,3200,3205,3212,3214,3216,3218,3240,
		3242,3251,3253,3257,3261,3261,3293,3294,3296,3297,3313,3314,3332,3340,
		3342,3344,3346,3386,3389,3389,3406,3406,3412,3414,3423,3425,3450,3455,
		3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,
		3648,3654,3713,3714,3716,3716,3718,3722,3724,3747,3749,3749,3751,3760,
		3762,3763,3773,3773,3776,3780,3782,3782,3804,3807,3840,3840,3904,3911,
		3913,3948,3976,3980,4096,4138,4159,4159,4176,4181,4186,4189,4193,4193,
		4197,4198,4206,4208,4213,4225,4238,4238,4256,4293,4295,4295,4301,4301,
		4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,
		4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,
		4824,4880,4882,4885,4888,4954,4992,5007,5024,5109,5112,5117,5121,5740,
		5743,5759,5761,5786,5792,5866,5873,5880,5888,5905,5919,5937,5952,5969,
		5984,5996,5998,6000,6016,6067,6103,6103,6108,6108,6176,6264,6272,6276,
		6279,6312,6314,6314,6320,6389,6400,6430,6480,6509,6512,6516,6528,6571,
		6576,6601,6656,6678,6688,6740,6823,6823,6917,6963,6981,6988,7043,7072,
		7086,7087,7098,7141,7168,7203,7245,7247,7258,7293,7296,7304,7312,7354,
		7357,7359,7401,7404,7406,7411,7413,7414,7418,7418,7424,7615,7680,7957,
		7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,
		8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,
		8150,8155,8160,8172,8178,8180,8182,8188,8305,8305,8319,8319,8336,8348,
		8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,
		8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8579,8580,
		11264,11492,11499,11502,11506,11507,11520,11557,11559,11559,11565,11565,
		11568,11623,11631,11631,11648,11670,11680,11686,11688,11694,11696,11702,
		11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11823,11823,
		12293,12294,12337,12341,12347,12348,12353,12438,12445,12447,12449,12538,
		12540,12543,12549,12591,12593,12686,12704,12735,12784,12799,13312,19903,
		19968,42124,42192,42237,42240,42508,42512,42527,42538,42539,42560,42606,
		42623,42653,42656,42725,42775,42783,42786,42888,42891,42954,42960,42961,
		42963,42963,42965,42969,42994,43009,43011,43013,43015,43018,43020,43042,
		43072,43123,43138,43187,43250,43255,43259,43259,43261,43262,43274,43301,
		43312,43334,43360,43388,43396,43442,43471,43471,43488,43492,43494,43503,
		43514,43518,43520,43560,43584,43586,43588,43595,43616,43638,43642,43642,
		43646,43695,43697,43697,43701,43702,43705,43709,43712,43712,43714,43714,
		43739,43741,43744,43754,43762,43764,43777,43782,43785,43790,43793,43798,
		43808,43814,43816,43822,43824,43866,43868,43881,43888,44002,44032,55203,
		55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,
		64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,
		64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,
		65136,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,
		65482,65487,65490,65495,65498,65500,65536,65547,65549,65574,65576,65594,
		65596,65597,65599,65613,65616,65629,65664,65786,66176,66204,66208,66256,
		66304,66335,66349,66368,66370,66377,66384,66421,66432,66461,66464,66499,
		66504,66511,66560,66717,66736,66771,66776,66811,66816,66855,66864,66915,
		66928,66938,66940,66954,66956,66962,66964,66965,66967,66977,66979,66993,
		66995,67001,67003,67004,67072,67382,67392,67413,67424,67431,67456,67461,
		67463,67504,67506,67514,67584,67589,67592,67592,67594,67637,67639,67640,
		67644,67644,67647,67669,67680,67702,67712,67742,67808,67826,67828,67829,
		67840,67861,67872,67897,67968,68023,68030,68031,68096,68096,68112,68115,
		68117,68119,68121,68149,68192,68220,68224,68252,68288,68295,68297,68324,
		68352,68405,68416,68437,68448,68466,68480,68497,68608,68680,68736,68786,
		68800,68850,68864,68899,69248,69289,69296,69297,69376,69404,69415,69415,
		69424,69445,69488,69505,69552,69572,69600,69622,69635,69687,69745,69746,
		69749,69749,69763,69807,69840,69864,69891,69926,69956,69956,69959,69959,
		69968,70002,70006,70006,70019,70066,70081,70084,70106,70106,70108,70108,
		70144,70161,70163,70187,70207,70208,70272,70278,70280,70280,70282,70285,
		70287,70301,70303,70312,70320,70366,70405,70412,70415,70416,70419,70440,
		70442,70448,70450,70451,70453,70457,70461,70461,70480,70480,70493,70497,
		70656,70708,70727,70730,70751,70753,70784,70831,70852,70853,70855,70855,
		71040,71086,71128,71131,71168,71215,71236,71236,71296,71338,71352,71352,
		71424,71450,71488,71494,71680,71723,71840,71903,71935,71942,71945,71945,
		71948,71955,71957,71958,71960,71983,71999,71999,72001,72001,72096,72103,
		72106,72144,72161,72161,72163,72163,72192,72192,72203,72242,72250,72250,
		72272,72272,72284,72329,72349,72349,72368,72440,72704,72712,72714,72750,
		72768,72768,72818,72847,72960,72966,72968,72969,72971,73008,73030,73030,
		73056,73061,73063,73064,73066,73097,73112,73112,73440,73458,73474,73474,
		73476,73488,73490,73523,73648,73648,73728,74649,74880,75075,77712,77808,
		77824,78895,78913,78918,82944,83526,92160,92728,92736,92766,92784,92862,
		92880,92909,92928,92975,92992,92995,93027,93047,93053,93071,93760,93823,
		93952,94026,94032,94032,94099,94111,94176,94177,94179,94179,94208,100343,
		100352,101589,101632,101640,110576,110579,110581,110587,110589,110590,
		110592,110882,110898,110898,110928,110930,110933,110933,110948,110951,
		110960,111355,113664,113770,113776,113788,113792,113800,113808,113817,
		119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,
		119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,
		120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,
		120128,120132,120134,120134,120138,120144,120146,120485,120488,120512,
		120514,120538,120540,120570,120572,120596,120598,120628,120630,120654,
		120656,120686,120688,120712,120714,120744,120746,120770,120772,120779,
		122624,122654,122661,122666,122928,122989,123136,123180,123191,123197,
		123214,123214,123536,123565,123584,123627,124112,124139,124896,124902,
		124904,124907,124909,124910,124912,124926,124928,125124,125184,125251,
		125259,125259,126464,126467,126469,126495,126497,126498,126500,126500,
		126503,126503,126505,126514,126516,126519,126521,126521,126523,126523,
		126530,126530,126535,126535,126537,126537,126539,126539,126541,126543,
		126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,
		126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,
		126572,126578,126580,126583,126585,126588,126590,126590,126592,126601,
		126603,126619,126625,126627,126629,126633,126635,126651,131072,173791,
		173824,177977,177984,178205,178208,183969,183984,191456,194560,195101,
		196608,201546,201552,205743,1000,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,
		8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,
		0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,
		30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,
		0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,
		0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,
		1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,
		0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,
		1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,1,0,0,0,0,92,1,0,0,0,0,94,1,0,0,
		0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,1,0,0,0,0,102,1,0,0,0,0,104,1,0,0,0,
		0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,0,112,1,0,0,0,0,114,1,0,0,0,
		0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,0,0,0,122,1,0,0,0,0,124,1,0,0,0,
		0,126,1,0,0,0,0,128,1,0,0,0,0,130,1,0,0,0,0,132,1,0,0,0,0,134,1,0,0,0,
		0,136,1,0,0,0,0,138,1,0,0,0,0,140,1,0,0,0,0,142,1,0,0,0,0,144,1,0,0,0,
		0,146,1,0,0,0,0,148,1,0,0,0,0,150,1,0,0,0,0,152,1,0,0,0,0,154,1,0,0,0,
		0,156,1,0,0,0,0,158,1,0,0,0,0,160,1,0,0,0,0,162,1,0,0,0,0,164,1,0,0,0,
		0,166,1,0,0,0,0,168,1,0,0,0,0,170,1,0,0,0,0,172,1,0,0,0,0,174,1,0,0,0,
		0,176,1,0,0,0,0,178,1,0,0,0,0,180,1,0,0,0,0,182,1,0,0,0,0,184,1,0,0,0,
		0,186,1,0,0,0,0,188,1,0,0,0,0,190,1,0,0,0,0,192,1,0,0,0,0,194,1,0,0,0,
		0,196,1,0,0,0,0,198,1,0,0,0,0,200,1,0,0,0,0,202,1,0,0,0,0,204,1,0,0,0,
		0,206,1,0,0,0,0,208,1,0,0,0,0,210,1,0,0,0,0,212,1,0,0,0,0,214,1,0,0,0,
		0,216,1,0,0,0,0,218,1,0,0,0,0,220,1,0,0,0,0,222,1,0,0,0,0,224,1,0,0,0,
		0,226,1,0,0,0,1,228,1,0,0,0,1,230,1,0,0,0,1,232,1,0,0,0,2,266,1,0,0,0,
		4,275,1,0,0,0,6,283,1,0,0,0,8,288,1,0,0,0,10,298,1,0,0,0,12,312,1,0,0,
		0,14,323,1,0,0,0,16,325,1,0,0,0,18,327,1,0,0,0,20,329,1,0,0,0,22,331,1,
		0,0,0,24,334,1,0,0,0,26,339,1,0,0,0,28,342,1,0,0,0,30,344,1,0,0,0,32,346,
		1,0,0,0,34,348,1,0,0,0,36,350,1,0,0,0,38,352,1,0,0,0,40,354,1,0,0,0,42,
		357,1,0,0,0,44,360,1,0,0,0,46,362,1,0,0,0,48,364,1,0,0,0,50,366,1,0,0,
		0,52,368,1,0,0,0,54,370,1,0,0,0,56,372,1,0,0,0,58,374,1,0,0,0,60,377,1,
		0,0,0,62,380,1,0,0,0,64,382,1,0,0,0,66,385,1,0,0,0,68,388,1,0,0,0,70,390,
		1,0,0,0,72,392,1,0,0,0,74,395,1,0,0,0,76,398,1,0,0,0,78,401,1,0,0,0,80,
		404,1,0,0,0,82,408,1,0,0,0,84,412,1,0,0,0,86,414,1,0,0,0,88,416,1,0,0,
		0,90,423,1,0,0,0,92,429,1,0,0,0,94,431,1,0,0,0,96,434,1,0,0,0,98,437,1,
		0,0,0,100,440,1,0,0,0,102,443,1,0,0,0,104,446,1,0,0,0,106,450,1,0,0,0,
		108,454,1,0,0,0,110,457,1,0,0,0,112,460,1,0,0,0,114,463,1,0,0,0,116,467,
		1,0,0,0,118,471,1,0,0,0,120,474,1,0,0,0,122,488,1,0,0,0,124,517,1,0,0,
		0,126,519,1,0,0,0,128,528,1,0,0,0,130,536,1,0,0,0,132,545,1,0,0,0,134,
		554,1,0,0,0,136,565,1,0,0,0,138,576,1,0,0,0,140,587,1,0,0,0,142,590,1,
		0,0,0,144,596,1,0,0,0,146,599,1,0,0,0,148,606,1,0,0,0,150,611,1,0,0,0,
		152,616,1,0,0,0,154,620,1,0,0,0,156,624,1,0,0,0,158,630,1,0,0,0,160,638,
		1,0,0,0,162,645,1,0,0,0,164,650,1,0,0,0,166,659,1,0,0,0,168,663,1,0,0,
		0,170,670,1,0,0,0,172,676,1,0,0,0,174,685,1,0,0,0,176,690,1,0,0,0,178,
		695,1,0,0,0,180,703,1,0,0,0,182,706,1,0,0,0,184,712,1,0,0,0,186,719,1,
		0,0,0,188,722,1,0,0,0,190,726,1,0,0,0,192,729,1,0,0,0,194,735,1,0,0,0,
		196,739,1,0,0,0,198,743,1,0,0,0,200,748,1,0,0,0,202,750,1,0,0,0,204,756,
		1,0,0,0,206,763,1,0,0,0,208,773,1,0,0,0,210,782,1,0,0,0,212,794,1,0,0,
		0,214,806,1,0,0,0,216,815,1,0,0,0,218,838,1,0,0,0,220,842,1,0,0,0,222,
		848,1,0,0,0,224,854,1,0,0,0,226,858,1,0,0,0,228,862,1,0,0,0,230,868,1,
		0,0,0,232,873,1,0,0,0,234,879,1,0,0,0,236,885,1,0,0,0,238,892,1,0,0,0,
		240,896,1,0,0,0,242,898,1,0,0,0,244,918,1,0,0,0,246,920,1,0,0,0,248,929,
		1,0,0,0,250,931,1,0,0,0,252,935,1,0,0,0,254,937,1,0,0,0,256,943,1,0,0,
		0,258,953,1,0,0,0,260,955,1,0,0,0,262,966,1,0,0,0,264,971,1,0,0,0,266,
		267,5,35,0,0,267,268,5,118,0,0,268,269,5,101,0,0,269,270,5,114,0,0,270,
		271,5,115,0,0,271,272,5,105,0,0,272,273,5,111,0,0,273,274,5,110,0,0,274,
		3,1,0,0,0,275,276,5,35,0,0,276,277,5,105,0,0,277,278,5,109,0,0,278,279,
		5,112,0,0,279,280,5,111,0,0,280,281,5,114,0,0,281,282,5,116,0,0,282,5,
		1,0,0,0,283,284,5,35,0,0,284,285,5,117,0,0,285,286,5,115,0,0,286,287,5,
		101,0,0,287,7,1,0,0,0,288,289,4,3,0,0,289,290,5,35,0,0,290,291,5,33,0,
		0,291,295,1,0,0,0,292,294,8,0,0,0,293,292,1,0,0,0,294,297,1,0,0,0,295,
		293,1,0,0,0,295,296,1,0,0,0,296,9,1,0,0,0,297,295,1,0,0,0,298,299,5,47,
		0,0,299,300,5,42,0,0,300,304,1,0,0,0,301,303,9,0,0,0,302,301,1,0,0,0,303,
		306,1,0,0,0,304,305,1,0,0,0,304,302,1,0,0,0,305,307,1,0,0,0,306,304,1,
		0,0,0,307,308,5,42,0,0,308,309,5,47,0,0,309,310,1,0,0,0,310,311,6,4,0,
		0,311,11,1,0,0,0,312,313,5,47,0,0,313,314,5,47,0,0,314,318,1,0,0,0,315,
		317,8,0,0,0,316,315,1,0,0,0,317,320,1,0,0,0,318,316,1,0,0,0,318,319,1,
		0,0,0,319,321,1,0,0,0,320,318,1,0,0,0,321,322,6,5,0,0,322,13,1,0,0,0,323,
		324,5,91,0,0,324,15,1,0,0,0,325,326,5,93,0,0,326,17,1,0,0,0,327,328,5,
		40,0,0,328,19,1,0,0,0,329,330,5,41,0,0,330,21,1,0,0,0,331,332,5,123,0,
		0,332,333,6,10,1,0,333,23,1,0,0,0,334,335,4,11,1,0,335,336,5,125,0,0,336,
		337,1,0,0,0,337,338,6,11,2,0,338,25,1,0,0,0,339,340,5,125,0,0,340,341,
		6,12,3,0,341,27,1,0,0,0,342,343,5,59,0,0,343,29,1,0,0,0,344,345,5,44,0,
		0,345,31,1,0,0,0,346,347,5,61,0,0,347,33,1,0,0,0,348,349,5,63,0,0,349,
		35,1,0,0,0,350,351,5,58,0,0,351,37,1,0,0,0,352,353,5,46,0,0,353,39,1,0,
		0,0,354,355,5,43,0,0,355,356,5,43,0,0,356,41,1,0,0,0,357,358,5,45,0,0,
		358,359,5,45,0,0,359,43,1,0,0,0,360,361,5,43,0,0,361,45,1,0,0,0,362,363,
		5,45,0,0,363,47,1,0,0,0,364,365,5,126,0,0,365,49,1,0,0,0,366,367,5,33,
		0,0,367,51,1,0,0,0,368,369,5,42,0,0,369,53,1,0,0,0,370,371,5,47,0,0,371,
		55,1,0,0,0,372,373,5,37,0,0,373,57,1,0,0,0,374,375,5,42,0,0,375,376,5,
		42,0,0,376,59,1,0,0,0,377,378,5,63,0,0,378,379,5,63,0,0,379,61,1,0,0,0,
		380,381,5,35,0,0,381,63,1,0,0,0,382,383,5,62,0,0,383,384,5,62,0,0,384,
		65,1,0,0,0,385,386,5,60,0,0,386,387,5,60,0,0,387,67,1,0,0,0,388,389,5,
		60,0,0,389,69,1,0,0,0,390,391,5,62,0,0,391,71,1,0,0,0,392,393,5,60,0,0,
		393,394,5,61,0,0,394,73,1,0,0,0,395,396,5,62,0,0,396,397,5,61,0,0,397,
		75,1,0,0,0,398,399,5,61,0,0,399,400,5,61,0,0,400,77,1,0,0,0,401,402,5,
		33,0,0,402,403,5,61,0,0,403,79,1,0,0,0,404,405,5,58,0,0,405,406,5,61,0,
		0,406,407,5,61,0,0,407,81,1,0,0,0,408,409,5,58,0,0,409,410,5,33,0,0,410,
		411,5,61,0,0,411,83,1,0,0,0,412,413,5,38,0,0,413,85,1,0,0,0,414,415,5,
		94,0,0,415,87,1,0,0,0,416,417,5,124,0,0,417,89,1,0,0,0,418,419,5,38,0,
		0,419,424,5,38,0,0,420,421,5,97,0,0,421,422,5,110,0,0,422,424,5,100,0,
		0,423,418,1,0,0,0,423,420,1,0,0,0,424,91,1,0,0,0,425,426,5,124,0,0,426,
		430,5,124,0,0,427,428,5,111,0,0,428,430,5,114,0,0,429,425,1,0,0,0,429,
		427,1,0,0,0,430,93,1,0,0,0,431,432,5,42,0,0,432,433,5,61,0,0,433,95,1,
		0,0,0,434,435,5,47,0,0,435,436,5,61,0,0,436,97,1,0,0,0,437,438,5,37,0,
		0,438,439,5,61,0,0,439,99,1,0,0,0,440,441,5,43,0,0,441,442,5,61,0,0,442,
		101,1,0,0,0,443,444,5,45,0,0,444,445,5,61,0,0,445,103,1,0,0,0,446,447,
		5,60,0,0,447,448,5,60,0,0,448,449,5,61,0,0,449,105,1,0,0,0,450,451,5,62,
		0,0,451,452,5,62,0,0,452,453,5,61,0,0,453,107,1,0,0,0,454,455,5,38,0,0,
		455,456,5,61,0,0,456,109,1,0,0,0,457,458,5,94,0,0,458,459,5,61,0,0,459,
		111,1,0,0,0,460,461,5,124,0,0,461,462,5,61,0,0,462,113,1,0,0,0,463,464,
		5,42,0,0,464,465,5,42,0,0,465,466,5,61,0,0,466,115,1,0,0,0,467,468,5,63,
		0,0,468,469,5,63,0,0,469,470,5,61,0,0,470,117,1,0,0,0,471,472,5,45,0,0,
		472,473,5,62,0,0,473,119,1,0,0,0,474,475,5,110,0,0,475,476,5,117,0,0,476,
		477,5,108,0,0,477,478,5,108,0,0,478,121,1,0,0,0,479,480,5,116,0,0,480,
		481,5,114,0,0,481,482,5,117,0,0,482,489,5,101,0,0,483,484,5,102,0,0,484,
		485,5,97,0,0,485,486,5,108,0,0,486,487,5,115,0,0,487,489,5,101,0,0,488,
		479,1,0,0,0,488,483,1,0,0,0,489,123,1,0,0,0,490,491,3,258,128,0,491,492,
		5,46,0,0,492,496,7,1,0,0,493,495,7,2,0,0,494,493,1,0,0,0,495,498,1,0,0,
		0,496,494,1,0,0,0,496,497,1,0,0,0,497,500,1,0,0,0,498,496,1,0,0,0,499,
		501,3,260,129,0,500,499,1,0,0,0,500,501,1,0,0,0,501,518,1,0,0,0,502,503,
		5,46,0,0,503,507,7,1,0,0,504,506,7,2,0,0,505,504,1,0,0,0,506,509,1,0,0,
		0,507,505,1,0,0,0,507,508,1,0,0,0,508,511,1,0,0,0,509,507,1,0,0,0,510,
		512,3,260,129,0,511,510,1,0,0,0,511,512,1,0,0,0,512,518,1,0,0,0,513,515,
		3,258,128,0,514,516,3,260,129,0,515,514,1,0,0,0,515,516,1,0,0,0,516,518,
		1,0,0,0,517,490,1,0,0,0,517,502,1,0,0,0,517,513,1,0,0,0,518,125,1,0,0,
		0,519,520,5,48,0,0,520,521,7,3,0,0,521,525,7,4,0,0,522,524,3,256,127,0,
		523,522,1,0,0,0,524,527,1,0,0,0,525,523,1,0,0,0,525,526,1,0,0,0,526,127,
		1,0,0,0,527,525,1,0,0,0,528,530,5,48,0,0,529,531,7,5,0,0,530,529,1,0,0,
		0,531,532,1,0,0,0,532,530,1,0,0,0,532,533,1,0,0,0,533,534,1,0,0,0,534,
		535,4,63,2,0,535,129,1,0,0,0,536,537,5,48,0,0,537,538,7,6,0,0,538,542,
		7,5,0,0,539,541,7,7,0,0,540,539,1,0,0,0,541,544,1,0,0,0,542,540,1,0,0,
		0,542,543,1,0,0,0,543,131,1,0,0,0,544,542,1,0,0,0,545,546,5,48,0,0,546,
		547,7,8,0,0,547,551,7,9,0,0,548,550,7,10,0,0,549,548,1,0,0,0,550,553,1,
		0,0,0,551,549,1,0,0,0,551,552,1,0,0,0,552,133,1,0,0,0,553,551,1,0,0,0,
		554,555,5,48,0,0,555,556,7,3,0,0,556,560,7,4,0,0,557,559,3,256,127,0,558,
		557,1,0,0,0,559,562,1,0,0,0,560,558,1,0,0,0,560,561,1,0,0,0,561,563,1,
		0,0,0,562,560,1,0,0,0,563,564,5,110,0,0,564,135,1,0,0,0,565,566,5,48,0,
		0,566,567,7,6,0,0,567,571,7,5,0,0,568,570,7,7,0,0,569,568,1,0,0,0,570,
		573,1,0,0,0,571,569,1,0,0,0,571,572,1,0,0,0,572,574,1,0,0,0,573,571,1,
		0,0,0,574,575,5,110,0,0,575,137,1,0,0,0,576,577,5,48,0,0,577,578,7,8,0,
		0,578,582,7,9,0,0,579,581,7,10,0,0,580,579,1,0,0,0,581,584,1,0,0,0,582,
		580,1,0,0,0,582,583,1,0,0,0,583,585,1,0,0,0,584,582,1,0,0,0,585,586,5,
		110,0,0,586,139,1,0,0,0,587,588,3,258,128,0,588,589,5,110,0,0,589,141,
		1,0,0,0,590,591,5,98,0,0,591,592,5,114,0,0,592,593,5,101,0,0,593,594,5,
		97,0,0,594,595,5,107,0,0,595,143,1,0,0,0,596,597,5,100,0,0,597,598,5,111,
		0,0,598,145,1,0,0,0,599,600,5,116,0,0,600,601,5,121,0,0,601,602,5,112,
		0,0,602,603,5,101,0,0,603,604,5,111,0,0,604,605,5,102,0,0,605,147,1,0,
		0,0,606,607,5,99,0,0,607,608,5,97,0,0,608,609,5,115,0,0,609,610,5,101,
		0,0,610,149,1,0,0,0,611,612,5,101,0,0,612,613,5,108,0,0,613,614,5,115,
		0,0,614,615,5,101,0,0,615,151,1,0,0,0,616,617,5,110,0,0,617,618,5,101,
		0,0,618,619,5,119,0,0,619,153,1,0,0,0,620,621,5,118,0,0,621,622,5,97,0,
		0,622,623,5,114,0,0,623,155,1,0,0,0,624,625,5,99,0,0,625,626,5,97,0,0,
		626,627,5,116,0,0,627,628,5,99,0,0,628,629,5,104,0,0,629,157,1,0,0,0,630,
		631,5,102,0,0,631,632,5,105,0,0,632,633,5,110,0,0,633,634,5,97,0,0,634,
		635,5,108,0,0,635,636,5,108,0,0,636,637,5,121,0,0,637,159,1,0,0,0,638,
		639,5,114,0,0,639,640,5,101,0,0,640,641,5,116,0,0,641,642,5,117,0,0,642,
		643,5,114,0,0,643,644,5,110,0,0,644,161,1,0,0,0,645,646,5,118,0,0,646,
		647,5,111,0,0,647,648,5,105,0,0,648,649,5,100,0,0,649,163,1,0,0,0,650,
		651,5,99,0,0,651,652,5,111,0,0,652,653,5,110,0,0,653,654,5,116,0,0,654,
		655,5,105,0,0,655,656,5,110,0,0,656,657,5,117,0,0,657,658,5,101,0,0,658,
		165,1,0,0,0,659,660,5,102,0,0,660,661,5,111,0,0,661,662,5,114,0,0,662,
		167,1,0,0,0,663,664,5,115,0,0,664,665,5,119,0,0,665,666,5,105,0,0,666,
		667,5,116,0,0,667,668,5,99,0,0,668,669,5,104,0,0,669,169,1,0,0,0,670,671,
		5,119,0,0,671,672,5,104,0,0,672,673,5,105,0,0,673,674,5,108,0,0,674,675,
		5,101,0,0,675,171,1,0,0,0,676,677,5,102,0,0,677,678,5,117,0,0,678,679,
		5,110,0,0,679,680,5,99,0,0,680,681,5,116,0,0,681,682,5,105,0,0,682,683,
		5,111,0,0,683,684,5,110,0,0,684,173,1,0,0,0,685,686,5,116,0,0,686,687,
		5,104,0,0,687,688,5,105,0,0,688,689,5,115,0,0,689,175,1,0,0,0,690,691,
		5,119,0,0,691,692,5,105,0,0,692,693,5,116,0,0,693,694,5,104,0,0,694,177,
		1,0,0,0,695,696,5,100,0,0,696,697,5,101,0,0,697,698,5,102,0,0,698,699,
		5,97,0,0,699,700,5,117,0,0,700,701,5,108,0,0,701,702,5,116,0,0,702,179,
		1,0,0,0,703,704,5,105,0,0,704,705,5,102,0,0,705,181,1,0,0,0,706,707,5,
		116,0,0,707,708,5,104,0,0,708,709,5,114,0,0,709,710,5,111,0,0,710,711,
		5,119,0,0,711,183,1,0,0,0,712,713,5,100,0,0,713,714,5,101,0,0,714,715,
		5,108,0,0,715,716,5,101,0,0,716,717,5,116,0,0,717,718,5,101,0,0,718,185,
		1,0,0,0,719,720,5,105,0,0,720,721,5,110,0,0,721,187,1,0,0,0,722,723,5,
		116,0,0,723,724,5,114,0,0,724,725,5,121,0,0,725,189,1,0,0,0,726,727,5,
		97,0,0,727,728,5,115,0,0,728,191,1,0,0,0,729,730,5,99,0,0,730,731,5,108,
		0,0,731,732,5,97,0,0,732,733,5,115,0,0,733,734,5,115,0,0,734,193,1,0,0,
		0,735,736,5,103,0,0,736,737,5,101,0,0,737,738,5,116,0,0,738,195,1,0,0,
		0,739,740,5,115,0,0,740,741,5,101,0,0,741,742,5,116,0,0,742,197,1,0,0,
		0,743,744,5,101,0,0,744,745,5,110,0,0,745,746,5,117,0,0,746,747,5,109,
		0,0,747,199,1,0,0,0,748,749,3,36,17,0,749,201,1,0,0,0,750,751,5,99,0,0,
		751,752,5,111,0,0,752,753,5,110,0,0,753,754,5,115,0,0,754,755,5,116,0,
		0,755,203,1,0,0,0,756,757,5,112,0,0,757,758,5,97,0,0,758,759,5,114,0,0,
		759,760,5,97,0,0,760,761,5,109,0,0,761,762,5,115,0,0,762,205,1,0,0,0,763,
		764,5,112,0,0,764,765,5,114,0,0,765,766,5,105,0,0,766,767,5,118,0,0,767,
		768,5,97,0,0,768,769,5,116,0,0,769,770,5,101,0,0,770,771,1,0,0,0,771,772,
		4,102,3,0,772,207,1,0,0,0,773,774,5,112,0,0,774,775,5,117,0,0,775,776,
		5,98,0,0,776,777,5,108,0,0,777,778,5,105,0,0,778,779,5,99,0,0,779,780,
		1,0,0,0,780,781,4,103,4,0,781,209,1,0,0,0,782,783,5,105,0,0,783,784,5,
		110,0,0,784,785,5,116,0,0,785,786,5,101,0,0,786,787,5,114,0,0,787,788,
		5,102,0,0,788,789,5,97,0,0,789,790,5,99,0,0,790,791,5,101,0,0,791,792,
		1,0,0,0,792,793,4,104,5,0,793,211,1,0,0,0,794,795,5,112,0,0,795,796,5,
		114,0,0,796,797,5,111,0,0,797,798,5,116,0,0,798,799,5,101,0,0,799,800,
		5,99,0,0,800,801,5,116,0,0,801,802,5,101,0,0,802,803,5,100,0,0,803,804,
		1,0,0,0,804,805,4,105,6,0,805,213,1,0,0,0,806,807,5,115,0,0,807,808,5,
		116,0,0,808,809,5,97,0,0,809,810,5,116,0,0,810,811,5,105,0,0,811,812,5,
		99,0,0,812,813,1,0,0,0,813,814,4,106,7,0,814,215,1,0,0,0,815,819,3,264,
		131,0,816,818,3,262,130,0,817,816,1,0,0,0,818,821,1,0,0,0,819,817,1,0,
		0,0,819,820,1,0,0,0,820,217,1,0,0,0,821,819,1,0,0,0,822,826,5,34,0,0,823,
		825,3,234,116,0,824,823,1,0,0,0,825,828,1,0,0,0,826,824,1,0,0,0,826,827,
		1,0,0,0,827,829,1,0,0,0,828,826,1,0,0,0,829,839,5,34,0,0,830,834,5,39,
		0,0,831,833,3,236,117,0,832,831,1,0,0,0,833,836,1,0,0,0,834,832,1,0,0,
		0,834,835,1,0,0,0,835,837,1,0,0,0,836,834,1,0,0,0,837,839,5,39,0,0,838,
		822,1,0,0,0,838,830,1,0,0,0,839,840,1,0,0,0,840,841,6,108,4,0,841,219,
		1,0,0,0,842,843,5,96,0,0,843,844,6,109,5,0,844,845,1,0,0,0,845,846,6,109,
		6,0,846,221,1,0,0,0,847,849,7,11,0,0,848,847,1,0,0,0,849,850,1,0,0,0,850,
		848,1,0,0,0,850,851,1,0,0,0,851,852,1,0,0,0,852,853,6,110,0,0,853,223,
		1,0,0,0,854,855,7,0,0,0,855,856,1,0,0,0,856,857,6,111,0,0,857,225,1,0,
		0,0,858,859,9,0,0,0,859,860,1,0,0,0,860,861,6,112,7,0,861,227,1,0,0,0,
		862,863,5,96,0,0,863,864,6,113,8,0,864,865,1,0,0,0,865,866,6,113,9,0,866,
		867,6,113,2,0,867,229,1,0,0,0,868,869,5,36,0,0,869,870,5,123,0,0,870,871,
		1,0,0,0,871,872,6,114,10,0,872,231,1,0,0,0,873,874,8,12,0,0,874,233,1,
		0,0,0,875,880,8,13,0,0,876,877,5,92,0,0,877,880,3,238,118,0,878,880,3,
		254,126,0,879,875,1,0,0,0,879,876,1,0,0,0,879,878,1,0,0,0,880,235,1,0,
		0,0,881,886,8,14,0,0,882,883,5,92,0,0,883,886,3,238,118,0,884,886,3,254,
		126,0,885,881,1,0,0,0,885,882,1,0,0,0,885,884,1,0,0,0,886,237,1,0,0,0,
		887,893,3,240,119,0,888,893,5,48,0,0,889,893,3,242,120,0,890,893,3,244,
		121,0,891,893,3,246,122,0,892,887,1,0,0,0,892,888,1,0,0,0,892,889,1,0,
		0,0,892,890,1,0,0,0,892,891,1,0,0,0,893,239,1,0,0,0,894,897,3,248,123,
		0,895,897,3,250,124,0,896,894,1,0,0,0,896,895,1,0,0,0,897,241,1,0,0,0,
		898,899,5,120,0,0,899,900,3,256,127,0,900,901,3,256,127,0,901,243,1,0,
		0,0,902,903,5,117,0,0,903,904,3,256,127,0,904,905,3,256,127,0,905,906,
		3,256,127,0,906,907,3,256,127,0,907,919,1,0,0,0,908,909,5,117,0,0,909,
		910,5,123,0,0,910,912,3,256,127,0,911,913,3,256,127,0,912,911,1,0,0,0,
		913,914,1,0,0,0,914,912,1,0,0,0,914,915,1,0,0,0,915,916,1,0,0,0,916,917,
		5,125,0,0,917,919,1,0,0,0,918,902,1,0,0,0,918,908,1,0,0,0,919,245,1,0,
		0,0,920,921,5,117,0,0,921,923,5,123,0,0,922,924,3,256,127,0,923,922,1,
		0,0,0,924,925,1,0,0,0,925,923,1,0,0,0,925,926,1,0,0,0,926,927,1,0,0,0,
		927,928,5,125,0,0,928,247,1,0,0,0,929,930,7,15,0,0,930,249,1,0,0,0,931,
		932,8,16,0,0,932,251,1,0,0,0,933,936,3,248,123,0,934,936,7,17,0,0,935,
		933,1,0,0,0,935,934,1,0,0,0,936,253,1,0,0,0,937,939,5,92,0,0,938,940,7,
		0,0,0,939,938,1,0,0,0,940,941,1,0,0,0,941,939,1,0,0,0,941,942,1,0,0,0,
		942,255,1,0,0,0,943,944,7,18,0,0,944,257,1,0,0,0,945,954,5,48,0,0,946,
		950,7,19,0,0,947,949,7,2,0,0,948,947,1,0,0,0,949,952,1,0,0,0,950,948,1,
		0,0,0,950,951,1,0,0,0,951,954,1,0,0,0,952,950,1,0,0,0,953,945,1,0,0,0,
		953,946,1,0,0,0,954,259,1,0,0,0,955,957,7,20,0,0,956,958,7,21,0,0,957,
		956,1,0,0,0,957,958,1,0,0,0,958,960,1,0,0,0,959,961,7,2,0,0,960,959,1,
		0,0,0,961,962,1,0,0,0,962,960,1,0,0,0,962,963,1,0,0,0,963,261,1,0,0,0,
		964,967,3,264,131,0,965,967,7,22,0,0,966,964,1,0,0,0,966,965,1,0,0,0,967,
		263,1,0,0,0,968,972,7,23,0,0,969,970,5,92,0,0,970,972,3,244,121,0,971,
		968,1,0,0,0,971,969,1,0,0,0,972,265,1,0,0,0,41,0,1,295,304,318,423,429,
		488,496,500,507,511,515,517,525,532,542,551,560,571,582,819,826,834,838,
		850,879,885,892,896,914,918,925,935,941,950,953,957,962,966,971,11,0,1,
		0,1,10,0,4,0,0,1,12,1,1,108,2,1,109,3,5,1,0,0,2,0,1,113,4,7,110,0,5,0,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
